name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    #Create work dir
    - name: Create work dir for formatter_lib
      run: mkdir formatter_lib/build

    - name: Create work dir for formatter_ex_lib
      run: mkdir formatter_ex_lib/build

    - name: Create work dir for hello_world_application
      run: mkdir hello_world_application/build

    - name: Create work dir for solver_lib
      run: mkdir solver_lib/build

    - name: Create work dir for solver_application
      run: mkdir solver_application/build
    #Configure cmake
    - name: Configure CMake for formatter_lib
      working-directory: formatter_lib/build
      run: cmake ..

    - name: Configure CMake for formatter_ex_lib
      working-directory: formatter_ex_lib/build
      run: cmake ..

    - name: Configure CMake for hello_world_application
      working-directory: hello_world_application/build
      run: cmake ..

    - name: Configure CMake for solver_lib
      working-directory: solver_lib/build
      run: cmake ..

    - name: Configure CMake for solver_application
      working-directory: solver_application/build
      run: cmake ..
    #Build
    - name: Build formatter_lib
      working-directory: formatter_lib/build
      run: make

    - name: Build formatter_ex_lib
      working-directory: formatter_ex_lib/build
      run: make

    - name: Build hello_world_application
      working-directory: hello_world_application/build
      run: make

    - name: Build solver_lib
      working-directory: solver_lib/build
      run: make

    - name: Build solver_application
      working-directory: solver_application/build
      run: make
